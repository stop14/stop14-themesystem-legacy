/*
 * @file _ui_patterns
 * @component ui_element_base
 * A place for helpful UI-oriented mixins.
 */

// This mixin enforces a standard location and naming convention for all icons
// Icons must be created as svg files and placed in the themeâ€™s in imgs/svg/icons directory
// Each icon must have three files representing the icon state:
// [icon_name]-default.svg, [icon_name]-active.svg, [icon_name]-neutral.svg

=icon-base($icon_name, $size: $btn_icon_size, $state: 'default', $active_state: 'active')
  display: flex
  align-items: center
  background-image: url(get_svg_url('icons/#{$icon_name}-#{$state}'))
  background-size: $size
  background-repeat: no-repeat
  background-position: right center
  width: fit-content
  height:  calc(#{$size} + #{$ui_padding})
  padding-right: calc(#{$size} + #{$ui_padding})

  @if $active_state
    &:hover, &.active
      background-image: url(get_svg_url('icons/#{$icon_name}-#{$active_state}'))
      color: $impact // Assumes that the corresponding icon is coloured $impact
  @else
    &:hover, &.active
      filter: brightness(70)

=icon-with-label($icon_name, $size: $btn_icon_size, $state: 'default', $active_state: 'active')
  @extend %icon-label
  +icon-base($icon_name, $size, $state, $active_state)

// See usage in form element base.

$ui_form_mobile_clearance: rv($mobile_edge_padding_factor)
$ui_form_clearance: rv($edge_padding_factor)

=ui-element-width-control()
  max-width: calc(100vw - #{$ui_form_mobile_clearance} * 2) // Form elements can only be as wide as the viewport less the edge padding.

  +bp($stack)
    max-width: calc(100vw - #{$ui_form_clearance} * 2)

=background-icon-base($icon_name, $size: $btn_icon_size, $state: 'default', $active_state: 'active')
  padding-right: calc(#{$size} + #{$ui_padding}) !important
  background-image: url(get_svg_url('icons/#{$icon_name}-#{$state}'))
  background-size: $size
  background-position: right $ui_padding center
  background-repeat: no-repeat

  @if $active_state
    &:hover, &.active
      background-image: url(get_svg_url('icons/#{$icon_name}-#{$active_state}'))
      color: $impact // Assumes that the corresponding icon is coloured $impact
  @else
    &:hover, &.active
      filter: brightness(70)
